<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Devex Tech Blog]]></title>
  <link href="http://devex.github.io/atom.xml" rel="self"/>
  <link href="http://devex.github.io/"/>
  <updated>2014-12-19T08:12:50-05:00</updated>
  <id>http://devex.github.io/</id>
  <author>
    <name><![CDATA[Devex]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Accumulated Christmas Friday Links]]></title>
    <link href="http://devex.github.io/blog/2014/12/19/accumulated-friday-links/"/>
    <updated>2014-12-19T07:55:58-05:00</updated>
    <id>http://devex.github.io/blog/2014/12/19/accumulated-friday-links</id>
    <content type="html"><![CDATA[<p><img src="http://gifs.joelglovier.com/will-ferrell/elevator-christmas-tree.gif" alt="Merry Christmas!" /></p>

<h2>December 12th</h2>

<ul>
<li><a href="http://martinfowler.com/articles/replaceThrowWithNotification.html">Replacing Throwing Exceptions with Notification in Validations</a></li>
<li><a href="http://pudo.org/blog/2014/12/03/newsclipse.html">What if journalists had story writing tools as powerful as those used by coders?</a></li>
<li><a href="https://medium.com/@andrey_cheptsov/top-20-navigation-features-in-intellij-idea-ed8c17075880">Top 20 Navigation Features in IntelliJ IDEA (Most of it should work for RubyMine as well)</a></li>
<li><a href="http://www.paperplanes.de/2014/12/10/from-open-to-minimum-vacation-policy.html">From Open (Unlimited) to Minimum Vacation Policy</a></li>
<li><a href="https://codeascraft.com/2014/12/11/make-performance-part-of-your-workflow/">Make Performance Part of Your Workflow</a></li>
<li><a href="http://calendar.perfplanet.com/2014/the-pain-of-duplicate-scripts/">The Pain of Duplicate Scripts</a></li>
<li><a href="http://www.tedunangst.com/flak/post/random-in-the-wild">random in the wild (via lwn) &ldquo;Younger programmers prefer srand48.&rdquo;</a></li>
</ul>


<h2>December 19th</h2>

<ul>
<li><a href="https://blog.docker.com/2014/12/dockercon-europe-keynote-state-of-the-art-in-microservices-by-adrian-cockcroft-battery-ventures/">State of the Art in Microservices (DockerCon EU Keynote)</a></li>
<li><a href="http://www.postgresql.org/about/news/1557/">PostgreSQL 9.4 released</a></li>
<li><a href="http://www.thoughtworks.com/conferences/rethink-dallas-2014">Three talks from the Rethink Conference</a></li>
<li><a href="http://highscalability.com/blog/2014/12/17/the-big-problem-is-medium-data.html">The Big Problem is Medium Data</a></li>
<li><a href="http://calendar.perfplanet.com/2014/async-fragments-rediscovering-progressive-html-rendering-with-marko/">Async Fragments: Rediscovering Progressive HTML Rendering with Marko</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Friday Links - December 5th]]></title>
    <link href="http://devex.github.io/blog/2014/12/09/friday-links-december-5th/"/>
    <updated>2014-12-09T04:41:03-05:00</updated>
    <id>http://devex.github.io/blog/2014/12/09/friday-links-december-5th</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://www.schneier.com/blog/archives/2014/12/corporations_mi.html">Schneier: Corporations Misusing Our Data</a></li>
<li><a href="https://codeascraft.com/2014/12/04/juggling-multiple-elasticsearch-instances-on-a-single-host/">Etsy: Juggling Multiple Elasticsearch Instances on a Single Host</a></li>
<li><a href="http://calendar.perfplanet.com/2014/http-2-0-is-coming-be-ready/">Performance Calendar: HTTP 2.0 is coming, be ready</a></li>
<li><a href="http://oobrien.com/2014/12/all-the-tweets/">Suprageography: All the Tweets</a></li>
<li><a href="https://github.com/blog/1933-introducing-organization-webhooks">Github: Introducing organization webhooks (finally)</a></li>
<li><a href="http://googlewebmastercentral.blogspot.com.es/2014/12/are-you-robot-introducing-no-captcha.html">Google: Are you a robot? Introducing “No CAPTCHA reCAPTCHA”</a></li>
<li><a href="http://randsinrepose.com/archives/the-qa-mindset">Rand: The QA Mindset</a></li>
<li><a href="https://aws.amazon.com/blogs/aws/simplified-reserved-instances/">AWS: Simplifying the EC2 Reserved Instance Model</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Friday Links - November 28th]]></title>
    <link href="http://devex.github.io/blog/2014/12/02/friday-links-november-28th/"/>
    <updated>2014-12-02T10:26:10-05:00</updated>
    <id>http://devex.github.io/blog/2014/12/02/friday-links-november-28th</id>
    <content type="html"><![CDATA[<p>Here are last week&rsquo;s Friday Links. Enjoy!</p>

<ul>
<li><a href="http://www.meetup.com/Barcelona-Free-Software-Users-Hackers/events/218591509/">Meetup in Barcelona: A story about tanks, the UN and Python</a></li>
<li><a href="http://blog.codinghorror.com/because-reading-is-fundamental-2/">coding horror: Because Reading is Fundamental</a></li>
<li><a href="https://www.mattcutts.com/blog/premortem/">Matt Cutts: Premortems</a></li>
<li><a href="http://www.brucelawson.co.uk/2014/device-detection-responsive-web-design/">Device Detection vs Responsive Web Design</a></li>
<li><a href="http://samsaffron.com/archive/2014/12/01/speeding-up-rails-4-2">Speeding up Rails 4.2</a></li>
<li><a href="http://news.sciencemag.org/funding/2014/11/gates-foundation-require-immediate-free-access-journal-articles">Gates Foundation to require immediate free access for journal articles</a></li>
<li><a href="http://www.enterprisetech.com/2014/11/14/rare-peek-massive-scale-aws/">A Rare Peek Into The Massive Scale of AWS</a></li>
<li><a href="https://www.omniref.com/blog/blog/2014/11/18/ko1-at-rubyconf-2014-massive-garbage-collection-speedup-in-ruby-2-dot-2/">Ko1 at RubyConf 2014: Massive Garbage Collection Speedup in Ruby 2.2</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[One in a `has_many` - Access Special Association Objects in ActiveRecord]]></title>
    <link href="http://devex.github.io/blog/2014/11/24/one-in-a-has-many-access-special-association-objects-in-activerecord/"/>
    <updated>2014-11-24T09:12:48-05:00</updated>
    <id>http://devex.github.io/blog/2014/11/24/one-in-a-has-many-access-special-association-objects-in-activerecord</id>
    <content type="html"><![CDATA[<p>ActiveRecord models that define a <code>has_many</code> association often need access to a
specific entry of this list. Think of an user that has many email addresses but
only one that is his primary address. Or a Blog post with many comments of which
one is featured.</p>

<!-- more -->


<h2>How a lot of people do it</h2>

<p>A pattern that seems to be quite common is to
<a href="http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#module-ActiveRecord::Associations::ClassMethods-label-Association+extensions">extend the association by implementing a method that gets you the specific record</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:emails</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">primary</span>
</span><span class='line'>      <span class="n">find</span><span class="p">(</span><span class="ss">:first</span><span class="p">,</span> <span class="ss">conditions</span><span class="p">:</span> <span class="s1">&#39;is_primary&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This allows you to access the user&rsquo;s primary email address via <code>#emails.primary</code>.
So far so good, but what happens if we need to get a list of users with their
primary email address? Of course we do eager loading to reduce the amount of
database queries:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">User</span>
</span><span class='line'>  <span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:emails</span><span class="p">)</span>
</span><span class='line'>  <span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="ss">:all</span><span class="p">)</span>
</span><span class='line'>  <span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">u</span><span class="o">|</span> <span class="nb">p</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">u</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="n">u</span><span class="o">.</span><span class="n">emails</span><span class="o">.</span><span class="n">primary</span><span class="o">.</span><span class="n">email</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>But when we look at the SQL queries that are actually executed we realize that
eager loading is happening but each primary email is queried separately
afterwards:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">DEBUG</span><span class="p">:</span> <span class="no">User</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;users&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;users&quot;</span>
</span><span class='line'><span class="ss">DEBUG</span><span class="p">:</span> <span class="no">Email</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">5</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;emails&quot;</span>
</span><span class='line'>                          <span class="no">WHERE</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="no">IN</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="ss">DEBUG</span><span class="p">:</span> <span class="no">Email</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">6</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;emails&quot;</span>
</span><span class='line'>                          <span class="no">WHERE</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="o">=</span> <span class="mi">1</span> <span class="no">AND</span> <span class="p">(</span><span class="n">is_primary</span><span class="p">)</span>
</span><span class='line'>                          <span class="no">LIMIT</span> <span class="mi">1</span>
</span><span class='line'><span class="ss">DEBUG</span><span class="p">:</span> <span class="no">Email</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;emails&quot;</span>
</span><span class='line'>                          <span class="no">WHERE</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="o">=</span> <span class="mi">2</span> <span class="no">AND</span> <span class="p">(</span><span class="n">is_primary</span><span class="p">)</span>
</span><span class='line'>                          <span class="no">LIMIT</span> <span class="mi">1</span>
</span><span class='line'><span class="ss">DEBUG</span><span class="p">:</span> <span class="no">Email</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;emails&quot;</span>
</span><span class='line'>                          <span class="no">WHERE</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="o">=</span> <span class="mi">3</span> <span class="no">AND</span> <span class="p">(</span><span class="n">is_primary</span><span class="p">)</span>
</span><span class='line'>                          <span class="no">LIMIT</span> <span class="mi">1</span>
</span><span class='line'><span class="ss">DEBUG</span><span class="p">:</span> <span class="no">Email</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;emails&quot;</span>
</span><span class='line'>                          <span class="no">WHERE</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="o">=</span> <span class="mi">4</span> <span class="no">AND</span> <span class="p">(</span><span class="n">is_primary</span><span class="p">)</span>
</span><span class='line'>                          <span class="no">LIMIT</span> <span class="mi">1</span>
</span><span class='line'><span class="ss">DEBUG</span><span class="p">:</span> <span class="no">Email</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;emails&quot;</span>
</span><span class='line'>                          <span class="no">WHERE</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="o">=</span> <span class="mi">5</span> <span class="no">AND</span> <span class="p">(</span><span class="n">is_primary</span><span class="p">)</span>
</span><span class='line'>                          <span class="no">LIMIT</span> <span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ouch! This will screw up our app&rsquo;s performance as the user base grows!</p>

<h2>A better way</h2>

<p>But there&rsquo;s another way of picking out one special instance of a <code>has_many</code>
association. A way that also allows eager loading. It&rsquo;s as simple as defining
just another association pointing to the same object.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:emails</span>
</span><span class='line'>  <span class="n">has_one</span> <span class="ss">:primary_email</span><span class="p">,</span> <span class="ss">class_name</span><span class="p">:</span> <span class="no">Email</span><span class="p">,</span> <span class="ss">conditions</span><span class="p">:</span> <span class="s1">&#39;is_primary&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now you can access the user&rsquo;s primary email address by <code>#primary_email</code>. Let&rsquo;s
check the SQL log for a user list using eager loading:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">User</span>
</span><span class='line'>  <span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:primary_email</span><span class="p">)</span>
</span><span class='line'>  <span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="ss">:all</span><span class="p">)</span>
</span><span class='line'>  <span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">u</span><span class="o">|</span> <span class="nb">p</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">u</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="n">u</span><span class="o">.</span><span class="n">primary_email</span><span class="o">.</span><span class="n">email</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>As we can see eager loading is now working properly for the primary email
addresses:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">DEBUG</span><span class="p">:</span> <span class="no">User</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;users&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;users&quot;</span>
</span><span class='line'><span class="ss">DEBUG</span><span class="p">:</span> <span class="no">Email</span> <span class="no">Load</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">5</span><span class="n">ms</span><span class="p">)</span> <span class="no">SELECT</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="n">*</span> <span class="no">FROM</span> <span class="s2">&quot;emails&quot;</span>
</span><span class='line'>                          <span class="no">WHERE</span> <span class="s2">&quot;emails&quot;</span><span class="o">.</span><span class="s2">&quot;user_id&quot;</span> <span class="no">IN</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
</span><span class='line'>                          <span class="no">AND</span> <span class="p">(</span><span class="n">is_primary</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yay! Now all the millions of users out there can sign up on our page without
breaking the list of primary email addresses&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Friday Links - November 21st]]></title>
    <link href="http://devex.github.io/blog/2014/11/24/friday-links-november-21st/"/>
    <updated>2014-11-24T04:45:03-05:00</updated>
    <id>http://devex.github.io/blog/2014/11/24/friday-links-november-21st</id>
    <content type="html"><![CDATA[<p>Every friday we pass each other some links that we read during the week and deem
worth sharing. Each monday we&rsquo;ll publish that list here on the Blog.</p>

<!-- more -->


<ul>
<li><a href="https://www.schneier.com/blog/archives/2014/11/a_new_free_ca.html">Schneier: New free CA</a></li>
<li><a href="http://googlewebmastercentral.blogspot.de/2014/11/helping-users-find-mobile-friendly-pages.html">Google: Helping users find mobile-friendly pages</a></li>
<li><a href="https://codeascraft.com/2014/11/17/personalized-recommendations-at-etsy/">Personalized Recommendations at Etsy</a></li>
<li><a href="https://www.mattcutts.com/blog/dial-tone-moments/">Matt Cutts: Dial tone moments</a></li>
<li><a href="https://aws.amazon.com/blogs/aws/track-aws-with-config/">Track AWS Resource Configurations With AWS Config</a></li>
<li><a href="https://aws.amazon.com/blogs/aws/code-management-and-deployment/">New AWS Tools for Code Management and Deployment</a></li>
<li><a href="http://weblog.rubyonrails.org/2014/11/19/Rails-4-0-11-1-and-4-1-7-1-have-been-released/">Rails 4.0.11.1 and 4.1.7.1 have been released</a></li>
<li><a href="http://techblog.netflix.com/2014/11/nodejs-in-flames.html">Netflix: Node.js in Flames</a></li>
<li><a href="http://nerds.airbnb.com/maintaining-quality-scale/">Airbnb: Maintaining Quality at Scale</a></li>
<li><a href="http://nerds.airbnb.com/testing-at-airbnb/">Airbnb: Testing</a></li>
<li><a href="http://nerds.airbnb.com/experiments-at-airbnb/">Airbnb: Experiments</a></li>
<li><a href="http://nerds.airbnb.com/openair-algorithmic-pricing/">Airbnb: Algorithmic pricing</a></li>
<li><a href="https://gigaom.com/2014/06/30/the-dark-side-of-io-how-the-u-k-is-making-web-domain-profits-from-a-shady-cold-war-land-deal/">The dark side of .io: How the U.K. is making web domain profits from a shady Cold War land deal</a></li>
<li><a href="https://developer.github.com/guides/traversing-with-pagination/">Traversing with Pagination</a></li>
<li><a href="http://www.theguardian.com/world/2014/nov/09/berlins-digital-exiles-tech-activists-escape-nsa">Berlin’s digital exiles: where tech activists go to escape the NSA</a></li>
<li>7 Rules for Creating Gorgeous UI - <a href="https://medium.com/@erikdkennedy/7-rules-for-creating-gorgeous-ui-part-1-559d4e805cda">Part 1</a> and <a href="https://medium.com/@erikdkennedy/7-rules-for-creating-gorgeous-ui-part-2-430de537ba96">Part 2</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
